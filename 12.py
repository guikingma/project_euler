'''
12:

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be:
1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.

The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

'''

def triangle_number(p_x):
	answer = 0;
	for i in range(1, p_x+1):
		answer = answer + i
	return answer

def number_divisors(p_number):
	answer = 0
	for i in range(1,p_number):
		if p_number % i == 0:
			answer = answer + 1
	return answer

def number_divisors_plus(p_number):
	answer = 0
	sqrt = int(p_number ** 0.5)
	for i in range(1,sqrt):
		if p_number % i == 0:
			answer = answer + 2
	#Se o numero for raiz perfeita, somar 1
	if (sqrt * sqrt == p_number):
		answer = answer + 1
	return answer


def first_n_divisors(p_n):
	i = 1
	triangle_i = triangle_number(i)
	while number_divisors_plus(triangle_i) < p_n:
		i = i + 1
		triangle_i = triangle_number(i)
	return triangle_i

print first_n_divisors(500)